global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

    extensions:
        # ADAPT THIS LOCATION TO YOUR PERSONAL PATH IF NECESSARY
        - ''

hardware:
    
    spm:
        module.Class: 'spm.spm_asc500.SPM_ASC500'
        sync_in_timeout:  0 # in ms
    
    time_tagger:
        module.Class: 'timetagger_counter.TimeTaggerCounter'
        timetagger_channel_apd_0: 1

        pixelclock_begin_chn: 2
        pixelclock_click_chn: 1
        pixelclock_end_chn: 3
    
    fastcounter_time_tagger:
        module.Class: 'swabian_instruments.timetagger_fast_counter.TimeTaggerFastCounter'
        timetagger_channel_apd_0: 1
        timetagger_channel_detect: 2
        timetagger_channel_next: 3
        timetagger_channel_sequence: 7
        timetagger_sum_channels: False

    # smiq:
    #     module.Class: 'microwave.mw_source_smiq.MicrowaveSmiq'
    #     gpib_address: 'GPIB0::25::INSTR'
    #     gpib_timeout: 20 # in seconds
    #     frequency_min: 300e3  # optional, in Hz
    #     frequency_max: 3.3e9  # optional, in Hz
    #     power_min: -100  # optional, in dBm
    #     power_max: 0  # optional, in dBm

    mw_source_smbv:
        module.Class: 'microwave.mw_source_smbv.MicrowaveSmbv'
        gpib_address: 'TCPIP::169.254.2.20::inst0::INSTR'
        gpib_timeout: 10

    sgs:
        module.Class: 'microwave.mw_source_sgs.MicrowaveSgs'
        visa_address: 'TCPIP0::169.254.2.20::inst0::INSTR'
        visa_timeout: 10

    confocalscanner_dummy:
        module.Class: 'confocal_scanner_dummy.ConfocalScannerDummy'
        clock_frequency: 100
        connect:
            fitlogic: 'fitlogic'
    
    pulsestreamer:
        module.Class: 'swabian_instruments.pulse_streamer.PulseStreamer'
        pulsestreamer_ip: '129.69.46.68'
        laser_channel: 0

        uw_x_channel: 1
        use_external_clock: False
        external_clock_option: 0

        pixel_start: 1
        pixel_stop: 2
        sync_in: 3
        mw_trig: 5
        mw_switch: 4

    aps_magnet:
        module.Class: 'magnet.APS_magnet.APSMagnet'
        magnet_address_zx: 'COM8'
        magnet_address_y: 'COM9'

        magnet_x_constr: 0.2 # in Tesla
        magnet_y_constr: 0.2 # in Tesla
        magnet_z_constr: 0.2 # in Tesla
        magnet_rho_constr: 0.3  # in Tesla  

logic:

    afm_scanner_logic:
        module.Class: 'afm_confocal_logic.AFMConfocalLogic'
        # ADAPT THIS LOCATION TO YOUR PERSONAL PATH
        meas_path: 'C:\\Data\\AttoDRY_Data'
        connect:
            spm_device: 'spm'
            #spm_device: 'spm' 
            savelogic: 'savelogic'
            counter_device: 'time_tagger'
            #counter_device: 'mq'
            counter_logic: 'counterlogic'
            fitlogic: 'fitlogic'
            pulser: 'pulsestreamer'
            microwave: 'mw_source_smbv' 
            pulsed_master: 'pulsedmasterlogic'

    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'time_tagger'
            #counter1: 'mq'
            savelogic: 'savelogic'

    odmr_counter_interfuse:
        module.Class: 'interfuse.odmr_counter_pulser_interfuse.ODMRCounterInterfuse'
        connect:
            slowcounter: 'time_tagger'
            pulser: 'pulsestreamer'

    odmrlogic:
        module.Class: 'odmr_logic.ODMRLogic'
        connect:
            odmrcounter: 'odmr_counter_interfuse'
            fitlogic: 'fitlogic'
            microwave1: 'mw_source_smbv'
            savelogic: 'savelogic'
            taskrunner: 'tasklogic'
        scanmode: 'LIST'
    
    fitlogic:
        module.Class: 'fit_logic.FitLogic'

    savelogic:
        module.Class: 'save_logic.SaveLogic'
        # ADAPT THIS LOCATION TO YOUR PERSONAL PATH
        win_data_directory: 'C:\\Data\\Qudi_Data'
        unix_data_directory: 'Data/'
        log_into_daily_directory: True

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            scannerLocationRefocus:
                module: 'refocus'
        #        preposttasks: ['fliplasermirror']
                pausetasks: ['scan', 'odmr']
                needsmodules:
                    optimizer: 'optimizerlogic'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            fitlogic: 'fitlogic'

    scanner_tilt_interfuse:
        module.Class: 'interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse'
        connect:
            confocalscanner1: 'confocalscanner_dummy'

    pulsedmasterlogic:
        module.Class: 'pulsed.pulsed_master_logic.PulsedMasterLogic'
        connect:
            pulsedmeasurementlogic: 'pulsedmeasurementlogic'
            sequencegeneratorlogic: 'sequencegeneratorlogic'

    sequencegeneratorlogic:
        module.Class: 'pulsed.sequence_generator_logic.SequenceGeneratorLogic'
        #assets_storage_path: 'C:/Users/<username>/saved_pulsed_assets'
        #additional_predefined_methods_path: 'C:\\Custom_dir'  # optional, can also be lists on several folders
        #additional_sampling_functions_path: 'C:\\Custom_dir'  # optional, can also be lists on several folders
        #overhead_bytes: 4294967296  # Not properly implemented yet
        connect:
            pulsegenerator: 'pulsestreamer'

    pulsedmeasurementlogic:
        module.Class: 'pulsed.pulsed_measurement_logic.PulsedMeasurementLogic'
        raw_data_save_type: 'text'  # optional
        #additional_extraction_path: 'C:\\Custom_dir\\Methods'  # optional
        #additional_analysis_path: 'C:\\Custom_dir\\Methods'  # optional
        connect:
            fastcounter: 'fastcounter_time_tagger'
            pulsegenerator: 'pulsestreamer'
            fitlogic: 'fitlogic'
            savelogic: 'savelogic'
            microwave: 'mw_source_smbv'
    
    magnetlogic:
        module.Class: 'magnet_vector_logic.MagnetLogic'
        connect:
            magnetstage: 'aps_magnet'
            counterlogic: 'counterlogic'
            savelogic: 'savelogic'
            fitlogic: 'fitlogic'
            qafmlogic: 'afm_scanner_logic'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    qafm_gui:
        module.Class: 'qafm.qafm_gui.ProteusQGUI'
        connect:
            qafmlogic: 'afm_scanner_logic'

    counter:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'

    odmr:
        module.Class: 'odmr.odmrgui.ODMRGui'
        connect:
            odmrlogic1: 'odmrlogic'
            savelogic: 'savelogic'
    
    pulsedmeasurement:
        module.Class: 'pulsed.pulsed_maingui.PulsedMeasurementGui'
        connect:
            pulsedmasterlogic: 'pulsedmasterlogic'
    
    magnet:
        module.Class: 'magnet.magnet_vector_gui.MagnetGui'
        connect:
            magnetlogic1: 'magnetlogic'
            savelogic: 'savelogic'
